% 4.9 马尔可夫链中的应用
% 2023.3.18

% 例1：城市与郊区人口迁移
% 移民矩阵
M = [0.95 0.03
     0.05 0.97];
x0 = [0.6 0.4]'; % [城市人口, 郊区人口]
population = 1e6;

x1 = M * x0;
x2 = M * x1;


% 例2：美国国会选举投票
% 投票矩阵
P = [
    0.7 0.1 0.3;
    0.2 0.8 0.3;
    0.1 0.1 0.4
];
x0 = [0.55 0.4 0.05]'; % 民主党Democratic (D),共和党Republican (R),自由党Libertarian (L)

x1 = P * x0;
x2 = P * x1;


% 例3：预言未来
P = [[0.5 0.3 0.2]' [0.2 0.8 0]' [0.3 0.3 0.4]'];
x0 = [1 0 0]';
q = [0.3 0.6 0.1]'; % 稳态向量

x1 = P * x0;
x2 = P * x1
x3 = P * x2
x4 = P * x3
x5 = P * x4
x6 = P * x5
x7 = P * x6
x8 = P * x7
x9 = P * x8
x10 = P * x9
x11 = P * x10
x12 = P * x11
x13 = P * x12
x14 = P * x13
x15 = P * x14

x_inf = P*q;

% 例4：城市与郊区人口迁移
% 移民矩阵
M = [0.95 0.03
     0.05 0.97];
q = [0.375 0.625]'; % [城市人口, 郊区人口]
x_inf = M * q;

% 例6：美国国会选举投票的长期预测
% 投票矩阵
P = [
    0.7 0.1 0.3;
    0.2 0.8 0.3;
    0.1 0.1 0.4
];
row = size(P, 1);
A = P - eye(row);

%用高斯―约当消元法和行主元法求A的行最简行矩阵R
R = rref(A);
%给出最简行矩阵每一步化简的过程, R2010a不支持?
% rrefmovie(A)        

x3 = 4;
x1 = -R(1, 3)*x3;
x2 = -R(2, 3)*x3;
w = [x1, x2, x3]';
q = w / sum(w);
% 验证未来
x_inf = P * q;
